"""

Creates a `constants.hpp` that matches the current `experiment.yml`

usage:
python hmu_compile_constants.py <experiment.yml's dir>

"""


import sys
import os
import yaml

experiment_dir = sys.argv[1]
experiment_yaml = "experiment.yml"

out_name = "constants.hpp"
out_dir = os.path.split(os.path.abspath(__file__))[0]
out_file = os.path.join(out_dir, out_name)

#from IPython.core.debugger import Tracer; Tracer()()

with open(os.path.join(experiment_dir, experiment_yaml), 'r') as f:
    experiment = yaml.load(f)

constants = \
    """
//////////////////////////////////////////
// AUTOGENERATED BY: compile_constants.py
//////////////////////////////////////////

// constants.h

#ifndef SRC_CONSTANTS_H_
#define SRC_CONSTANTS_H_

// Debug flag (comment-out to disable debugging output)
/* #define _DEBUG */

#include <algorithm>

// Agent parameters
// ----------------
#define NUM_NODES {NUM_NODES}
#define NUM_STATES {NUM_STATES}
#define NUM_SENSORS {NUM_SENSORS}
#define NUM_MOTORS {NUM_MOTORS}
#define DETERMINISTIC {DETERMINISTIC}
const int BODY_LENGTH = {BODY_LENGTH};

// World parameters
// ----------------
#define WORLD_HEIGHT {WORLD_HEIGHT}
// IMPORTANT: Must be a power of 2
#define WORLD_WIDTH {WORLD_WIDTH}

// Evolution parameters
// ---------------------
// IMPORTANT: These must be a power of 2
// Minimum length of a duplicated/deleted genome section
#define MIN_DUP_DEL_LENGTH {MIN_DUP_DEL_LENGTH}
// Maximum length of a duplicated/deleted genome section
#define MAX_DUP_DEL_LENGTH {MAX_DUP_DEL_LENGTH}

// Enumeration constants
#define WRONG_AVOID 0
#define WRONG_CATCH 1
#define CORRECT_AVOID 2
#define CORRECT_CATCH 3


#endif  // SRC_CONSTANTS_H_
""".format(
    NUM_NODES=experiment["num_nodes"],
    NUM_STATES=2**experiment["num_nodes"],
    NUM_SENSORS=experiment["num_sensors"],
    NUM_MOTORS=experiment["num_motors"],
    DETERMINISTIC=str(experiment["deterministic"]).lower(),
    BODY_LENGTH=max(3, experiment["num_sensors"]),
    WORLD_HEIGHT=experiment["world_height"],
    WORLD_WIDTH=experiment["world_width"],
    MAX_DUP_DEL_LENGTH=experiment["max_dup_del_width"],
    MIN_DUP_DEL_LENGTH=experiment["min_dup_del_width"],
)

with open(out_file, 'w') as f:
    f.write(constants)


