#!/bin/bash

MINUTE=60
HOUR=3600

python="$HOME/.virtualenvs/pyanimats/bin/python" # ToDo: should this be `which python` instead, so it gets the current env's python?

seed_start=0
num_cores=1

fitness="nat"
ngen=1000
taskname="1-3-1-3"
jumpstart=0
popsize=100
#paramfile="params.yml"
init_genome_path="test/end_to_end/init_genome"
num_samples=$ngen
log_freq=1

snapshot_hr=2
snapshot_min=00
snapshot_sec=00
snapshot_freq=$(($snapshot_hr*$HOUR + $snapshot_min*$MINUTE + $snapshot_sec))
min_snapshots=0

# Derived parameters.
sensors=2 #`$python ./pyanimats.py --num-sensors`
version=2 #`$python ./pyanimats.py --version`
taskfile="test/end_to_end/tasks/"$taskname".yml"

echo "PyAnimats multi-seed simulation ($(date))"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Rebuilding animat C++ extension..."
rm -r build && rm animat.cpython-34m.so && $python setup.py build_ext --inplace &> /dev/null && echo "...finished."
echo ""
echo "Sampling $num_samples genomes per save."
echo "Printing status every $log_freq generations."
echo "Recording snapshots every "$snapshot_hr":"$snapshot_min":"$snapshot_sec", taking at least "$min_snapshots"."

datename="$(date +%s)" # - $(date)" # name each run the time it was ran as <seconds> - <human readable>
output_dir="test/end_to_end/raw_results/$datename" # "test/end_to_end/raw_results/$datename"
echo "Writing results to '$output_dir'."
echo ""

for ((seed=$seed_start; seed < $(($seed_start + $num_cores)); seed++))
do
  # Get the output with the seed directory included.
  cur_output_dir="$output_dir/seed-$seed"
  # Build the command.
  cmd="$python ./pyanimats.py $cur_output_dir" # $taskfile -f $fitness -n $ngen -s $seed -j $jumpstart -p $popsize -i $num_samples"
  # Append the intial genome option if it is set.
  [[ ! -z $init_genome_path ]] && cmd="$cmd -g $init_genome_path"
  # Display command.
  echo "Executing command:"
  echo $cmd
  echo ""
  # Ensure the output directory exists.
  mkdir -p $cur_output_dir
  # Run it!
  unbuffer $cmd 2>&1 | tee "$cur_output_dir/output.log" && echo "[Seed $seed] Wrote results to '$cur_output_dir'." &
  
done
# cd test/end_to_end
# nosetests e2etest.py
# cd ../..
