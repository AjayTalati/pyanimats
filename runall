#!/bin/bash

MINUTE=60
HOUR=3600

python="$HOME/.virtualenvs/pyanimats/bin/python"

seed_start=0
num_cores=14

fitness="mat"
ngen=60000
taskname="3-4-6-5"
jumpstart=0
popsize=100
paramfile="params.yml"
init_genome_path="raw_results/0.0.16/nat/3-4-6-5/sensors-3/jumpstart-4/gen-60000/seed-8"
num_samples=200
log_freq=1

snapshot_hr=2
snapshot_min=00
snapshot_sec=00
snapshot_freq=$(($snapshot_hr*$HOUR + $snapshot_min*$MINUTE + $snapshot_sec))
min_snapshots=0

# Derived parameters.
sensors=`$python ./pyanimats.py --num-sensors`
version=`$python ./pyanimats.py --version`
taskfile="tasks/"$taskname".yml"

echo "PyAnimats multi-seed simulation ($(date))"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Rebuilding animat C++ extension..."
rm -r build && rm animat.cpython-34m.so && $python setup.py build_ext --inplace &> /dev/null && echo "...finished."
echo ""
echo "Sampling $num_samples genomes per save."
echo "Printing status every $log_freq generations."
echo "Recording snapshots every "$snapshot_hr":"$snapshot_min":"$snapshot_sec", taking at least "$min_snapshots"."

output_dir="raw_results/$version/$fitness/$taskname/sensors-$sensors/jumpstart-$jumpstart/ngen-$ngen"
echo "Writing results to '$output_dir'."
echo ""

for ((seed=$seed_start; seed < $(($seed_start + $num_cores)); seed++))
do
  # Get the output with the seed directory included.
  cur_output_dir="$output_dir/seed-$seed"
  # Build the command.
  cmd="$python ./pyanimats.py $cur_output_dir $taskfile $paramfile -f $fitness -n $ngen -s $seed -j $jumpstart -p $popsize -i $num_samples -l $log_freq -t $snapshot_freq" 
  # Append the intial genome option if it is set.
  [[ ! -z $init_genome_path ]] && cmd="$cmd -g $init_genome_path"
  # Display command.
  echo "Executing command:"
  echo $cmd
  echo ""
  # Ensure the output directory exists.
  mkdir -p $cur_output_dir
  # Run it!
  unbuffer $cmd 2>&1 | tee "$cur_output_dir/output.log" && echo "[Seed $seed] Wrote results to '$cur_output_dir'." & 
done
